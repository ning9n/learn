server:
  port: 8888

spring:
  application:
    name: auth
  cloud:
    nacos:
      server-addr: 192.168.101.128:8848
      discovery:
        namespace: dev
        group: learn
      config:
        namespace: dev
        group: learn
        file-extension: yaml
        refresh-enabled: true
        shared-configs: # 共享配置
          - dataId: sa-token-alone-redis.yaml # 共享redis配置
            group: learn
            refresh: true
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.101.128:3306/auth?serverTimezone=UTC&userUnicode=true&useSSL=false
    username: root
    password: glj
  redis:
    database: 0
    host: 192.168.101.128
    port: 6379
    password: glj
    lettuce: #使用jedis需要换为jedis并添加相关依赖
      pool:
        max-active: 8 #最大连接
        max-idle: 8 #最大空闲连接
        min-idle: 2 #最小空闲连接
        max-wait: 1000ms #连接等待时间
  profiles:
    active: dev
# feign连接池
feign:
  okhttp:
    enabled: true # 开启OKHttp功能

############## Sa-Token 配置 (文档: https://sa-token.cc) ##############
sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: sa-token
  # token 有效期（单位：秒） 默认30天，-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）
  is-share: true
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: uuid
  # 是否输出操作日志
  is-log: true



